name: Compiling

on:
  # allows us to run workflows manually
  workflow_dispatch:

  pull_request:
    branches:
      - master
  push:
    branches:
      - master

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  MPICH_FC: gfortran

jobs:
  main:
    runs-on: ubuntu-latest
#    env: 
        #CASE: "1cyl"
        #NEKSTAB_SOURCE_ROOT: "../../../.." #--> path to nekStab
        #NEK_SOURCE_ROOT: "$NEKSTAB_SOURCE_ROOT/Nek5000"
#         FC: "mpif77"
#         CC: "mpicc"
        #FFLAGS: "-mcmodel=large -march=native -ffixed-line-length-none -g -fbacktrace"
      
   # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    
      - name: Checkout repository nekStab
        uses: actions/checkout@v2
        
      - name: Checkout submodules Nek5000
        run: git submodule update --init --recursive
      
      - name: Install dependecies for Nek500 and NekStab
        shell: bash
        run: |
          sudo apt -y update
          sudo apt install -y build-essential cmake 
          sudo apt install -y gfortran mpich libmpich-dev libopenblas-dev
         
      - name: Get cpu-information
        run: lscpu

        # Export NEW_VAR_NAME variable for subsequent steps, and export all environment variables matching the optional regexp.
#       - uses: lukka/set-shell-env@v1
#         with:
#           CASE: "1cyl"
#           NEKSTAB_SOURCE_ROOT: "../../../.." #--> path to nekStab
#           NEK_SOURCE_ROOT: "$NEKSTAB_SOURCE_ROOT/Nek5000"
#           FC: "mpif77"
#           CC: "mpicc"
#           FFLAGS: "-mcmodel=large -march=native -ffixed-line-length-none -g -fbacktrace"
         
      # with:
      #   shell: 'bash' or 'tcsh' or any command that starts a shell.
      #   args: '-c env' or any arguments that list the environment variables as NAME=VALUE pairs.
      #   filter: an optional reg exp to export matching variables out of the desired shell.
      #   YOUR_VARIABLE_NAME: provide value for any new variable you name. Note the name will always be converted to be all uppercase.
      #  Here onward any following step can access the environment variable using:
      #  in your yml file:
      #     ${{ env.YOUR_VARIABLE_NAME }}
      - name: Compile cylinder case
        shell: bash
        run: |
          pwd
          cd Nek5000/tools
          ./maketools genmap genbox
          cd ../..          
          pwd
          cd examples/1cyl/autotest/base
          #sh cmpile.sh all
          export MAKEFLAGS="-j "`  lscpu | grep -i Thread | awk '{print $NF}' `
          export NEKSTAB_SOURCE_ROOT="/home/runner/work/nekStab/nekStab"
          export NEK_SOURCE_ROOT="$NEKSTAB_SOURCE_ROOT/Nek5000"
          export FCcomp="gfotran"
          source $NEKSTAB_SOURCE_ROOT/core/compiler_gcc_tb.sh
          echo $FC
          which mpif77
          sh $NEK_SOURCE_ROOT/bin/makenek $CASE
          more build.log
         
     ## - name: Running cylinder case
     #   run: |
    #     export CASE='1cyl'
    ##     export CASE_DIR=`pwd`
    #     echo $CASE > SESSION.NAME
   #      echo $CASE_DIR'/' >> SESSION.NAME
   #      mpiexec -np 2 ./nek5000
