c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      call nekStab

      !if(.not.if3d)call outpost_blayer_pert
      !call avg_all_time

      return
      end
c-----------------------------------------------------------------------
      subroutine userf (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ffx = 0.0d0
      ffy = 0.0d0
      ffz = 0.0d0

      call nekStab_forcing(ffx,ffy,ffz,ix,iy,iz,ieg)

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e=gllel(ieg)
         ux=ubb(ix,iy,iz,e)
         uy=vbb(ix,iy,iz,e)
         uz=0.0d0
         temp=0.0d0
      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      real f_1, smooth,sb
      f_1 = uparam(05)

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux = ubb(ix,iy,iz,e)

         !sb = vjb(ix,iy,iz,e)*sin(time*8.0d0*atan(1.0d0)*f_1)
         !smooth = 0.50d0+0.50d0*tanh((time-10.0d0))
         
         uy = vbb(ix,iy,iz,e) !+ sb*smooth
         uz = 0.0d0
         temp=0.0d0
      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      udiff = 0.0d0
      utrans = 0.0d0
      return
      end
c-----------------------------------------------------------------------
      subroutine userq (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      qvol = 0.0d0
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      call set_blasius(ubb,vbb) ! Compute the Blasius profile for I.C.
      call compute_sb(vjb)
      ifbfcv = .true. !do not load prescibed base flow
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
