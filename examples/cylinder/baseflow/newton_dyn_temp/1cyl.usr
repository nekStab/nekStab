c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      call nekStab

      return
      end
c-----------------------------------------------------------------------
      subroutine nekStab_usrchk
      include 'SIZE'
      include 'TOTAL'

      if(istep.eq.0)then !change defaults

        k_dim = int(uparam(7)) ; call bcast(k_dim,isize)
        schur_tgt = 0 ; call bcast(schur_tgt,isize)
        maxmodes = 2 ; call bcast(maxmodes,isize)
        ifres = .false. ; call bcast(ifres,lsize)
        ifdyntol = .true. ; call bcast(ifdyntol,lsize)
      
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userf (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer ip, iel
      real rtmp
 
      ffx = 0.0d0
      ffy = 0.0d0
      ffz = 0.0d0

      if ( uparam(06).gt.0 ) then
      iel = gllel(ieg)
      ip = ix + nx1*(iy-1+ny1*(iz-1+nz1*(iel-1)))

       if (jp .eq. 0) then ! uparam(6) is the Ri or Fr

         if (ldimt .eq. 1) ffy = ffy + t(ix, iy, iz, iel, 1)*uparam(06) ! temp
         if (ldimt .eq. 2) ffy = ffy + t(ix, iy, iz, iel, 2)*uparam(06) ! ps 1
         if (ldimt .eq. 3) ffy = ffy + t(ix, iy, iz, iel, 3)*uparam(06) ! ps 2
         if (ldimt .eq. 4) ffy = ffy + t(ix, iy, iz, iel, 4)*uparam(06) ! ps 3

       elseif (jp .eq. 1) then

         if (ldimt .eq. 1) ffy = ffy + tp(ip, 1, 1)*uparam(06) ! temp
         if (ldmit .eq. 2) ffy = ffy + tp(ip, 2, 1)*uparam(06) ! ps 1
         if (ldmit .eq. 3) ffy = ffy + tp(ip, 3, 1)*uparam(06) ! ps 2
         if (ldmit .eq. 4) ffy = ffy + tp(ip, 4, 1)*uparam(06) ! ps 3

       elseif(jp .gt. 1) then

         write(6,*)' jp>1 not implemented!'

       endif

      endif

      call nekStab_forcing(ffx,ffy,ffz,ix,iy,iz,ieg)

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux=1.0d0
         uy=0.0d0
         uz=0.0d0
         temp=0.0d0
      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity

         e  = gllel(ieg)
         ux = 1.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp=0.0d0

         if(x.gt.-1.and.x.lt.1)then

          if (ifield.eq.2) temp = 1.0  ! temperature
          if (ifield.eq.3) temp = 1.0  ! ps1
          if (ifield.eq.4) temp = 1.0  ! ps2
          if (ifield.eq.5) temp = 1.0  ! ps3

         endif

      else                      ! perturbation

         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0

      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      integer iel,ifc,m

       if (ldimt.gt.0) then
        do m = 1,ldimt
         cbc(:,:,m)=cbc(:,:,1)
         do iel=1,nelt
          do ifc = 1, 2*ndim
           if(cbc(ifc,iel,1).eq.'W  ')cbc(ifc,iel,m)='t  '
           if(cbc(ifc,iel,1).eq.'v  ')cbc(ifc,iel,m)='t  '
          enddo
         enddo
        enddo
       endif
      
      return
      end
c-----------------------------------------------------------------------
