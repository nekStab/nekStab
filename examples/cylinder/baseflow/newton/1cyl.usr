c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      call nekStab

      return
      end
c-----------------------------------------------------------------------
      subroutine nekStab_usrchk
      include 'SIZE'
      include 'TOTAL'

      if(istep.eq.0)then !change defaults

        k_dim = int(uparam(7)) ; call bcast(k_dim,isize)
        schur_tgt = 0 ; call bcast(schur_tgt,isize)
        maxmodes = 2 ; call bcast(maxmodes,isize)
        ifres = .false. ; call bcast(ifres,lsize)
        ifdyntol = .false. ; call bcast(ifdyntol,lsize)
        iffindiff = .true. ; call bcast(iffindif, lsize)

      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userf (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      integer ip, iel
      real rtmp
 
      ffx = 0.0d0
      ffy = 0.0d0
      ffz = 0.0d0

      if(ifheat.and.uparam(06).gt.0)then
      iel = gllel(ieg)
      ip = ix + nx1*(iy-1+ny1*(iz-1+nz1*(iel-1)))
      if (jp .eq. 0) rtmp = t(ix, iy, iz, iel, 1)
      if (jp .eq. 1) rtmp = tp(ip, 1, 1)
      ffy=rtmp*uparam(06)
      endif

      call nekStab_forcing(ffx,ffy,ffz,ix,iy,iz,ieg)

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux=1.0d0
         uy=0.0d0
         uz=0.0d0
         temp=0.0d0
      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux = 1.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp=0.0d0

         if(x.gt.-1.and.x.lt.1)temp=1.0d0 !cylinder with T

      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      integer iel,ifc
      
      if(ifheat)then
       cbc(:,:,2)=cbc(:,:,1)
       do iel=1,nelt
        do ifc = 1, 2*ndim
         if(cbc(ifc,iel,1).eq.'W  ')cbc(ifc,iel,2)='t  '
         if(cbc(ifc,iel,1).eq.'v  ')cbc(ifc,iel,2)='t  '
        enddo
       enddo
      endif

      return
      end
c-----------------------------------------------------------------------
