#include "experimental/meshsmoother.f"
c-----------------------------------------------------------------------
      subroutine nekStab_usrchk
         include 'SIZE'
         include 'TOTAL'

         if(istep.eq.0)then !change defaults
            k_dim = int(uparam(7)) ; call bcast(k_dim,isize)
            schur_tgt = 0 ; call bcast(schur_tgt,isize)
            maxmodes = 10 ; call bcast(maxmodes,isize)
            ifdyntol = .true. ; call bcast(ifdyntol,lsize)
            ifres = .false. ; call bcast(ifres,lsize)
            ifvor = .true. ; call bcast(ifvor,lsize)
            ifvox = .true. ; call bcast(ifvox,lsize)
         endif

      end
c-----------------------------------------------------------------------
      subroutine userchk
         implicit none
         include 'SIZE'
         include 'TOTAL'
         include 'HELIXD'
         !  if (ISTEP.eq.0) then
         !     !  call gfldr('strtorus0.f00001')
         !     time = 0.0d0
         !  endif
         ifcyclic = .true.
         call nekStab_drive
         call hpts
         call save_ubar
      end
c-----------------------------------------------------------------------
      subroutine userf(ix,iy,iz,ieg)
         include 'SIZE'
         include 'TOTAL'
         include 'NEKUSE'
         call makebf_str_pulse(ffx,ffy,ffz,ix,iy,iz,ieg) ! add to ff*
         !call nekStab_forcing(ffx,ffy,ffz,ix,iy,iz,ieg)
      end
c----------------------------------------------------------------------------------
      subroutine userbc(i,j,k,iside,eg)
         implicit none
         include 'SIZE'
         include 'TOTAL'
         include 'NEKUSE'
         integer i,j,k,iside,eg
         if (JP.eq.0) then         ! velocity
            ux = 1.0d0
            uy = 0.0d0
            uz = 0.0d0
            temp=0.0d0
         else                      ! perturbation
            ux = 0.0d0
            uy = 0.0d0
            uz = 0.0d0
            temp = 0.0d0
         endif
      end
c-----------------------------------------------------------------------
      subroutine useric(i,j,k,eg)
         include 'SIZE'
         include 'TOTAL'
         include 'NEKUSE'
         if (JP.eq.0) then         ! velocity
            ux=0.0d0
            uy=0.0d0
            uz=0.0d0
            temp=0.0d0
         else                      ! perturbation
            ux = 0.0d0
            uy = 0.0d0
            uz = 0.0d0
            temp = 0.0d0
         endif
      end
c-----------------------------------------------------------------------
      subroutine usrdat
         implicit none
         include 'SIZE'
         include 'TOTAL'
         call setbc(1,1,'W  ')
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
         include 'SIZE'
         include 'TOTAL'
         include 'HELIXD'

         integer iel,ifc
         parameter(nbc=2)         !number of boundary conditions
         character*3 dcbc(nbc)
         save        dcbc
         data        dcbc /'P  ', 'W  '/  !BCs listed here
         idftyp = 1      !distance function - 0 -> exponential, 1-> tanh
         alpha = 15.     !Input for wall distance function
         beta  = 0.12     !
         nouter = 60      !total loops around laplacian and optimizer smoothing
         nlap = 30        !number of laplacian iterations in each loop
         nopt = 30        !number of optimization iterations in each loop
         mtyp = 1         !metric type

         omega = (womersley**2)*cpfld(1,1)      ! pulsation frequency
         pulse_T = 2.0D0*pi/omega               ! pulsation period
         an_phi = atan2(pitch_s,curv_radius)
         sweep = length*cos(an_phi)/curv_radius ! sweep angle in radians
         call helix_pipe
         if (nid.eq.0) write(6,*) 'usrdat2: phi = ', an_phi*180.0d0/3.140d0
         if (nid.eq.0) write(6,*) 'usrdat2: curv_radius = ', curv_radius

        !call smoothmesh(mtyp,nouter,nlap,nopt,nbc,dcbc,idftyp,alpha,beta)


      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      end
c-----------------------------------------------------------------------
      subroutine userq(ix,iy,iz,ieg)
         include 'SIZE'
         include 'TOTAL'
         include 'NEKUSE'
         qvol = 0.0d0
         source = 0.0d0
      end
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
         include 'SIZE'
         include 'TOTAL'
         include 'NEKUSE'
         udiff =0.0d0
         utrans=0.0d0
      end
