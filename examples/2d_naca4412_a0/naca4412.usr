c-----------------------------------------------------------------------
      subroutine userchk
      include 'SIZE'
      include 'TOTAL'

      !if(istep.eq.0) call gfldr("naca44120.fXXXXX")

      call nekStab

      !call stat_avg
      !call stats_3d_full
      
      uxx = cos(4*atan(1.0d0)*uparam(7)/180.0d0)
      uyy = sin(4*atan(1.0d0)*uparam(7)/180.0d0)
      if(nid.eq.0)write(6,*)'AoA=',uparam(7),uxx,uyy

      return
      end
c-----------------------------------------------------------------------
      subroutine nekstab_chk
      include 'SIZE'
      include 'TOTAL'
      return
      end
c-----------------------------------------------------------------------
      subroutine userf (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ffx = 0.0d0
      ffy = 0.0d0
      !if(ifto)ffy = temp*0.15d0 !coupling the scalar field
      ffz = 0.0d0

      call nekStab_forcing(ffx,ffy,ffz,ix,iy,iz,ieg)

      return
      end
c-----------------------------------------------------------------------
      subroutine useric (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e 

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux = cos(4*atan(1.0d0)*uparam(7)/180.0d0)
         uy = sin(4*atan(1.0d0)*uparam(7)/180.0d0)
         uz = 0.0d0
         temp = 0.0d0
      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc (ix,iy,iz,iside,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      integer e

      if (JP.eq.0) then         ! velocity
         e  = gllel(ieg)
         ux = cos(4*atan(1.0d0)*uparam(7)/180.0d0)
         uy = sin(4*atan(1.0d0)*uparam(7)/180.0d0)
         uz = 0.0d0
         temp = 0.0d0

         if(x.gt.-2)temp=1.0d0 !cylinder with T

      else                      ! perturbation
         ux = 0.0d0
         uy = 0.0d0
         uz = 0.0d0
         temp = 0.0d0
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine uservp (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      udiff = 0.0d0
      utrans = 0.0d0
      return
      end
c-----------------------------------------------------------------------
      subroutine userq (ix,iy,iz,ieg)
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      qvol = 0.0d0
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2
      include 'SIZE'
      include 'TOTAL'
      integer iel,ifc

      do iel=1,nelv
       do ifc=1,2*ndim
        id_face = bc(5,ifc,iel,1)
        if (id_face.eq.3) then       ! BoundaryID for outflow
         cbc(ifc,iel,1) = 'O  '
        elseif (id_face.eq.4) then   ! BoundaryID for symmetric condition on the bottom
         cbc(ifc,iel,1) = 'v  '
        elseif (id_face.eq.5) then   ! BoundaryID for symmetric condition on the top
         cbc(ifc,iel,1) = 'O  '
        elseif (id_face.eq.1) then   ! BoundaryID for wall
         cbc(ifc,iel,1) = 'W  '
        elseif (id_face.eq.2) then   ! BoundaryID for prescibed inflow
         cbc(ifc,iel,1) = 'v  '
        endif
       enddo
      enddo

      cbc(:,:,2)=cbc(:,:,1)
      do iel=1,nelt
       do ifc = 1, 2*ndim
        if(cbc(ifc,iel,1).eq.'W  ')cbc(ifc,iel,2)='t  '
        if(cbc(ifc,iel,1).eq.'v  ')cbc(ifc,iel,2)='SYM'
      enddo
      enddo
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3
      return
      end
