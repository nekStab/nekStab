c
c     Include file to dimension static arrays
c     and to set some hardwired run-time parameters
c
      integer ldim,lx1,lxd,lx2,lx1m,lelg,lelt,lpmin,ldimt
      integer lpelt,lbelt,toteq,lcvelt
      integer lelx,lely,lelz,mxprev,lgmres,lorder,lhis
      integer maxobj,lpert,nsessmax,lxo
      integer lfdm,ldimt_proj,lelr

      ! BASIC
      parameter (ldim=2)               ! domain dimension (2 or 3)
      parameter (lx1=10)!04,06,08,10,12 ! GLL points per element along each direction
      parameter (lxd=15)!06,09,12,15,18 ! GL  points for over-integration (dealiasing)
      parameter (lx2=lx1-2)            ! GLL points for pressure (lx1 or lx1-2)

      parameter (lelg=1980)            ! max number of global elements
      parameter (lpmin=2)            ! min number of MPI ranks
      parameter (lelt=lelg/lpmin + 3)  ! max number of local elements per MPI rank
      parameter (ldimt=1)              ! max auxiliary fields (temperature + scalars)

      ! OPTIONAL
      parameter (ldimt_proj=1)         ! max auxiliary fields residual projection
      parameter (lelr=lelt)            ! max number of local elements per restart file
      parameter (lhis=20 )              ! max history/monitoring points
      parameter (maxobj=1)             ! max number of objects
      parameter (lpert=1)              ! max number of perturbations
      parameter (toteq=1)              ! max number of conserved scalars in CMT
      parameter (nsessmax=1)           ! max sessions to NEKNEK
      parameter (lxo=lx1)              ! max GLL points on output (lxo>=lx1)
      parameter (mxprev=20)            ! max dim of projection space
      parameter (lgmres=30)            ! max dim Krylov space
      parameter (lorder=3)             ! max order in time
      parameter (lx1m=1)               ! GLL points mesh solver
      parameter (lfdm=0)               ! unused
      parameter (lelx=1,lely=1,lelz=1) ! global tensor mesh dimensions
      parameter (lbelt=1)              ! lelt for mhd
      parameter (lpelt=lelt)           ! lelt for linear stability
      parameter (lcvelt=1)             ! lelt for cvode

      ! INTERNALS
      include 'SIZE.inc'
      include 'NEKSTAB.inc'

      ! duplicating sponge arrays to define penalization sponge !
      real spng_fun2(LX1*LY1*LZ1*LELV)     ! sponge function
     $    ,spng_vr2(LX1*LY1*LZ1*LELV,LDIM) ! reference velocity field
      common /SPONGEV2/ spng_fun2, spng_vr2

      real spng_str2      !var sponge strength
      real spng_wl2(LDIM) !var sponge width (left section; every dmension separately)
      real spng_wr2(LDIM) !var sponge width (right section)
      real spng_dl2(LDIM) !var sponge drop/rise width (left section)
      real spng_dr2(LDIM) !var sponge drop/rise width (right section)
      common /SPONGER/ spng_str2, spng_wl2, spng_wr2, spng_dl2, spng_dr2

      logical ifvans
      real vansforce_x(lx1,ly1,lz1,lelt),
     $ vansforce_y(lx1,ly1,lz1,lelt),
     $ vansforce_z(lx1,ly1,lz1,lelt)
      common /vansforce/ vansforce_x, vansforce_y, vansforce_z, ifvans
